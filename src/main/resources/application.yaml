spring:
  application:
    name: highload
  kafka:
    producer:
      bootstrap-servers: localhost:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: ru.otus.highload.config.PostSerializer

    consumer:
      bootstrap-servers: localhost:9092
      group-id: post-consumer-group
      enable-auto-commit: false
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: ru.otus.highload.config.PostDeserializer
      auto-offset-reset: earliest
      max-poll-records: 1
      properties:
        max-poll-interval-ms: 15000
    listener:
      concurrency: 1
      ack-mode: MANUAL_IMMEDIATE
  redis:
    host: localhost
    port: 6379
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5001/postgres
    username: postgres
    password: postgres
    hikari:
      minimum-idle: 20
      maximum-pool-size: 30
#    master:
#      driver-class-name: org.postgresql.Driver
#      url: jdbc:postgresql://localhost:5432/postgres
#      username: postgres
#      password: postgres
#      hikari:
#        minimum-idle: 10
#        maximum-pool-size: 10
#
#    slave1:
#      driver-class-name: org.postgresql.Driver
#      url: jdbc:postgresql://localhost:5433/postgres
#      username: postgres
#      password: postgres
#      hikari:
#        minimum-idle: 5
#        maximum-pool-size: 5
#
#    slave2:
#      driver-class-name: org.postgresql.Driver
#      url: jdbc:postgresql://localhost:5434/postgres
#      username: postgres
#      password: postgres
#      hikari:
#        minimum-idle: 5
#        maximum-pool-size: 5

server:
  port: 8081
  error:
    include-message: always
    include-binding-errors: always

topic:
  name: "postTopic"

celebrity-count: 1000
cache-duration: 10